{"version":3,"sources":["progres.js"],"names":["document","addEventListener","selector","circleProgress","querySelectorAll","wrapper","i","prototype","wrapperWidth","percent","getValues","wrapperHeight","centerX","innerHTML","style","to","duration","start","newPercent","text","context","clearRect","beginPath","animate","arc","centerY","radius","circleStart","lineWidth","strokeStyle","t","b","c","d","easeInOutQuart","time","from","stroke","x","Math","round","PI","circleEnd","update","canvas","width","height","btnUpdate","setAttribute","getRandom","resizeTimer","parseInt","window","getComputedStyle","getAttribute","querySelector","requestAnimationFrame","Date","getTime","drawArc","clearTimeout","min","max","random","setTimeout"],"mappings":"aAAAA,SAASC,iBAAiB,mBAAoB,WAA9CD,IAA0BE,EAElBC,EAFkBD,EAiHP,WA/GXC,EAAcH,SAAII,iBAASF,GACvBG,MAAAA,UAAUL,QAASI,KAAAA,EAAiBF,SAAxCG,EAAAC,GACMC,IAAAA,EACEC,EAEAC,EAgBAC,EACAF,EACAG,EACOC,EACPC,EACQA,EACDR,EAECS,EACDC,EACAC,EACAC,EACPC,EACQC,EAwBRC,SAAQC,IACAC,sBAARC,GACQC,IAAIZ,GAAZ,IAAqBa,MAASC,UAAQC,EAC9BC,GAAAA,GAAYA,EAApB,CACQC,IAAAA,EA0ChB,SAAwBC,EAAGC,EAAGC,EAAGC,GAC7B,OAAKH,GAAKG,EAAI,GAAK,EAAUD,EAAI,EAAIF,EAAIA,EAAIA,EAAIA,EAAIC,GAC7CC,EAAI,IAAMF,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAAKC,EA5CzCG,CAAAC,EAAAC,EAAArB,EAAAqB,EAAApB,GACQqB,EAARC,EACQhB,EAART,UAAA0B,KAAAC,MAAAtB,GAAA,KAMH,WAdG,IAAIS,EAAc,IAAMY,KAAKE,GAepBC,EAATC,EAAoBzB,EAAA,GAAAqB,KAAAE,GACpB/B,EAASW,UAAA,EAAA,EAAAuB,OAAAC,MAAAD,OAAAE,QACF1B,EAAAE,YAFXF,EAAAI,IAAAZ,EAAAa,EAAAC,EAAAC,EAAA,EAAAY,KAAAE,IAAA,GAVIrB,EAAQQ,UAAYA,EAclBR,EAAAS,YAAA,OAEFkB,EAAY/C,SACNC,EAAAA,YACE+C,EAAAA,IAARpC,EAAqBa,EAAAC,EAAsBa,EAAWU,GAAX,GACrC7B,EAAAQ,UAAAA,EAFVR,EAAAS,YAAAA,EAIQ5B,EAAAA,SAjBQW,IAqBhB,SAAIsC,IAjDQ1C,EAAR2C,SAAAC,OAAAC,iBAAAhD,GAAAwC,OACAjB,EAAApB,EACMC,EAAUoC,EAAPS,aAAT,sBACAzB,EAAcxB,oCAAdI,EAAA,iEAAA,EAAAD,EAAA,aAAA,EAAAG,EAAA,cACQN,EAAAQ,UAARA,EApBJM,EAAAd,EAAAkD,cAAA,eAOIX,OAASvC,EAAQkD,cAAc,yBAgB1BhC,EAATT,MAAmBgC,OAAAF,OAAA9B,MAAA+B,MAAAD,OAAA9B,MAAAgC,OAAAtC,EAAA,KACfgD,EAAAA,OAAsBjC,WAAtB,MACQX,EAAO6C,OAAOC,MAAX,EAdXjC,EAAUmB,OAAOE,OAAS,EAgBdZ,EACRhB,EAFIA,EAAR,EAGSL,EAAAA,EACL8C,EAAO,IACV/B,EAAA,GACJF,EAAAkB,OAAAC,MAAA,EAAAjB,EAbGC,EAAcxB,EAAQiD,aAAa,iBAe9BK,GAAT,IAAmBF,MAAAC,UAiCfE,IAFAV,IAiBRA,EAbYU,IAEM5D,SAAAI,iBAAA,eAAA,GAHVH,iBAAA,QAAA,WAFJI,EAAA2C,aAAA,qBAAAT,KAAAC,MA2BR,SAAmBqB,EAAKC,GACpB,OAAOvB,KAAKwB,UAAYD,EAAMD,GAAOA,EA5BjCZ,CAAA,EAAA,MAUJN,MAEAtC,EAAAJ,iBAAA,QAAA,WACA0C,MAbIS,OAAOnD,iBAAiB,SAAU,WAiB7BiC,aAATgB,GACcjB,EAAY+B,WAAO,WACtBJ,aAAUV,GACpBjC,GAAA,IAAAwC,MAAAC,UA3GLf,KA6Fe","file":"progres.min.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\r\n\r\n    var circleProgress = (function(selector) {\r\n        var wrapper = document.querySelectorAll(selector);\r\n        Array.prototype.forEach.call(wrapper, function(wrapper, i) {\r\n            var wrapperWidth,\r\n                wrapperHeight,\r\n                percent,\r\n                innerHTML,\r\n                context,\r\n                lineWidth,\r\n                centerX,\r\n                centerY,\r\n                radius,\r\n                newPercent,\r\n                speed,\r\n                from,\r\n                to,\r\n                duration,\r\n                start,\r\n                strokeStyle,\r\n                text;\r\n\r\n            var getValues = function() {\r\n                wrapperWidth = parseInt(window.getComputedStyle(wrapper).width);\r\n                wrapperHeight = wrapperWidth;\r\n                percent = wrapper.getAttribute('data-cp-percentage');\r\n                innerHTML = '<span class=\"percentage\"><strong>' + percent + '</strong> %</span><canvas class=\"circleProgressCanvas\" width=\"' + (wrapperWidth * 2) + '\" height=\"' + wrapperHeight * 2 + '\"></canvas>';\r\n                wrapper.innerHTML = innerHTML;\r\n                text = wrapper.querySelector(\".percentage\");\r\n                canvas = wrapper.querySelector(\".circleProgressCanvas\");\r\n                wrapper.style.height = canvas.style.width = canvas.style.height = wrapperWidth + \"px\";\r\n                context = canvas.getContext('2d');\r\n                centerX = canvas.width / 2;\r\n                centerY = canvas.height / 2;\r\n                newPercent = 0;\r\n                speed = 1;\r\n                from = 0;\r\n                to = percent;\r\n                duration = 1000;\r\n                lineWidth = 25;\r\n                radius = canvas.width / 2 - lineWidth;\r\n                strokeStyle = wrapper.getAttribute('data-cp-color');\r\n                start = new Date().getTime();\r\n            };\r\n\r\n            function animate() {\r\n                requestAnimationFrame(animate);\r\n                var time = new Date().getTime() - start;\r\n                if (time <= duration) {\r\n                    var x = easeInOutQuart(time, from, to - from, duration);\r\n                    newPercent = x;\r\n                    text.innerHTML = Math.round(newPercent) + \" %\";\r\n                    drawArc();\r\n                }\r\n            }\r\n\r\n            function drawArc() {\r\n                var circleStart = 1.5 * Math.PI;\r\n                var circleEnd = circleStart + (newPercent / 50) * Math.PI;\r\n                context.clearRect(0, 0, canvas.width, canvas.height);\r\n                context.beginPath();\r\n                context.arc(centerX, centerY, radius, circleStart, 4 * Math.PI, false);\r\n                context.lineWidth = lineWidth;\r\n                context.strokeStyle = \"#ddd\";\r\n                context.stroke();\r\n                context.beginPath();\r\n                context.arc(centerX, centerY, radius, circleStart, circleEnd, false);\r\n                context.lineWidth = lineWidth;\r\n                context.strokeStyle = strokeStyle;\r\n                context.stroke();\r\n\r\n            }\r\n            var update = function() {\r\n                getValues();\r\n                animate();\r\n            }\r\n            update();\r\n\r\n            var btnUpdate = document.querySelectorAll(\".btn-update\")[0];\r\n            btnUpdate.addEventListener(\"click\", function() {\r\n                wrapper.setAttribute(\"data-cp-percentage\", Math.round(getRandom(5, 95)));\r\n                update();\r\n            });\r\n            wrapper.addEventListener(\"click\", function() {\r\n                update();\r\n            });\r\n\r\n            var resizeTimer;\r\n            window.addEventListener(\"resize\", function() {\r\n                clearTimeout(resizeTimer);\r\n                resizeTimer = setTimeout(function() {\r\n                    clearTimeout(resizeTimer);\r\n                    start = new Date().getTime();\r\n                    update();\r\n                }, 250);\r\n            });\r\n        });\r\n\r\n        //\r\n        // http://easings.net/#easeInOutQuart\r\n        //  t: current time\r\n        //  b: beginning value\r\n        //  c: change in value\r\n        //  d: duration\r\n        //\r\n        function easeInOutQuart(t, b, c, d) {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\r\n            return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n        }\r\n\r\n    });\r\n\r\n    circleProgress('.counter');\r\n\r\n    // Gibt eine Zufallszahl zwischen min (inklusive) und max (exklusive) zurÃ¼ck\r\n    function getRandom(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n});"]}